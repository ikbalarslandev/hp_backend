// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// enum EVibe {
// Couple_Friendly === 0
// Family_Friendly === 1
// Foreigner_Friendly === 2
// }

// enum EAmenities {
//   Shower   === 0
//   Sauna    === 1
//   Steam_Room  === 2
//   Jacuzzi     === 3
//   Pool       === 4
//   Massage    === 5
//   Ice_Bucket === 6
//   Ice_Pool   === 7
// }

// enum Payment_Method {
// Cash_Only === 0
// Cash_and_Credit_Cards  === 1
// Credit_Card_Only === 2
// }

// enum Role{
//   USER === 0
//   ADMIN === 1
// }

// enum Gender {
//   female === 0
//   male === 1
// }

// enum Age_Range {
//   0_17 === 0
//   18_24 === 1
//   25_30 === 2
//   31_40 === 3
//   41+ === 4

// enum Review_Type{
// solo === 0
// couple === 1
// family === 2
// friends === 3
// }

model Property {
  id      String  @id @unique @default(uuid())
  adminId String?
  title   String  @unique

  contact   Contact? @relation(fields: [contactId], references: [id])
  contactId String?

  price   Price?  @relation(fields: [priceId], references: [id])
  priceId String?

  rating   Rating? @relation(fields: [ratingId], references: [id])
  ratingId String?  @unique

  vibe      Int?
  days      Day[]
  amenities Int[]
  products  Product[]
  reviews   Review[]

  photos String[]
  sex    Int
  pay    Int      @default(0)
  desc_tr String?
  desc_en String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum EDays {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}

model Day {
  id        String @id @default(uuid())
  day       EDays
  openTime  String
  closeTime String
  sex       Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  belongsToId String
  belongsTo   Property @relation(fields: [belongsToId], references: [id])
}

model Contact {
  id       String  @id @default(uuid())
  phone    String
  city     String
  district String
  address  String
  location Float[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Property  Property[]
}

model Rating {
  id    String @id @default(uuid())
  count Int
  rate_overall   Float

  rate_location      Float
  rate_staff         Float
  rate_atmosphere    Float
  rate_cleanliness   Float
  rate_facilities    Float
  rate_value_for_money Float

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Property  Property[]
}

model Price {
  id    String @id @default(uuid())
  adult Float
  child Float
  scrub Float

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Property  Property[]
}

model Product {
  id          String   @id @default(uuid())
  name_tr     String
  name_en     String
  price       Float
  details_tr  String[]
  details_en  String[]
  tags        String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  belongsToId String
  belongsTo   Property @relation(fields: [belongsToId], references: [id])
}

model Review {
  id         String   @id @default(uuid())
  type       Int
  rate       Float
  comment    String

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  propertyId String
  property   Property @relation(fields: [propertyId], references: [id])
  userId     String
  user       User     @relation(fields: [userId], references: [id])
}

model User {
  id          String   @id @default(uuid())
  name        String
  email       String   @unique
  image       String
  nationality String?
  age_range   Int
  gender      Int
  role        Int      @default(0)
  reviews     Review[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model Country {
  tld      String   @id @default(uuid())
  name_tr       String
  name_en       String
  image         String
}