// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// enum EVibe {
//   Historical  === 0
//   Budget     === 1
//   Couple_Friendly  === 2
//   Family_Friendly  === 3
//   Luxury   === 4
// }

// enum EAmenities {
//   Shower   === 0
//   Sauna    === 1
//   Steam_Room  === 2
//   Jacuzzi     === 3
//   Pool       === 4
//   Massage    === 5
//   Ice_Bucket === 6
//   Ice_Pool   === 7
// }

// enum Payment_Method {
// Cash_Only === 0
// Cash_and_Credit_Cards  === 1
// Credit_Card_Only === 2
// }

model Property {
  id      String  @id @unique @default(uuid())
  adminId String?
  title   String  @unique

  contact   Contact? @relation(fields: [contactId], references: [id])
  contactId String?

  price   Price?  @relation(fields: [priceId], references: [id])
  priceId String?

  rating   Rating? @relation(fields: [ratingId], references: [id])
  ratingId String?

  vibe      Int
  days      Day[]
  amenities Int[]
  products  Product[]
  reviews   Review[]

  photos String[]
  sex    Int
  pay    Int   @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum EDays {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}

model Day {
  id        String @id @default(uuid())
  day       EDays
  openTime  String
  closeTime String
  sex       Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  belongsToId String
  belongsTo   Property @relation(fields: [belongsToId], references: [id])
}

model Contact {
  id       String  @id @default(uuid())
  phone    String
  city     String
  district String
  address  String
  location Float[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Property  Property[]
}

model Rating {
  id    String @id @default(uuid())
  sum   Float
  count Int

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Property  Property[]
}

model Price {
  id    String @id @default(uuid())
  adult Float
  child Float
  scrub Float

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Property  Property[]
}

model Product {
  id          String   @id @default(uuid())
  name_tr     String
  name_en     String
  price       Float
  details_tr  String[]
  details_en  String[]
  tags        String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  belongsToId String
  belongsTo   Property @relation(fields: [belongsToId], references: [id])
}

model Review {
  id          String   @id @default(uuid())
  name        String
  email       String
  img         String
  rate        Int
  comment     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  belongsToId String
  belongsTo   Property @relation(fields: [belongsToId], references: [id])
}
